{"version":3,"file":"js/Cate_Params.a3d21cdb.js","mappings":"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","sources":["webpack://vue_shop/./src/components/goods/Cate.vue?b868","webpack://vue_shop/src/components/goods/Cate.vue","webpack://vue_shop/./src/components/goods/Cate.vue?361d","webpack://vue_shop/./src/components/goods/Cate.vue","webpack://vue_shop/./src/components/goods/Params.vue?b7e8","webpack://vue_shop/src/components/goods/Params.vue","webpack://vue_shop/./src/components/goods/Params.vue?bb35","webpack://vue_shop/./src/components/goods/Params.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"商品分类\")])],1),_c('el-card',[_c('el-row',[_c('el-col',[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.showAddCateDialog}},[_vm._v(\"添加分类\")])],1)],1),_c('tree-table',{staticClass:\"treeTable\",attrs:{\"data\":_vm.catelist,\"columns\":_vm.columns,\"selection-type\":false,\"expand-type\":false,\"show-index\":\"\",\"index-text\":\"#\",\"border\":\"\",\"show-row-hover\":false},scopedSlots:_vm._u([{key:\"isok\",fn:function(scope){return [(scope.row.cat_deleted === false)?_c('i',{staticClass:\"el-icon-success\",staticStyle:{\"color\":\"lightgreen\"}}):_c('i',{staticClass:\"el-icon-error\",staticStyle:{\"color\":\"red\"}})]}},{key:\"order\",fn:function(scope){return [(scope.row.cat_level===0)?_c('el-tag',{attrs:{\"size\":\"mini\"}},[_vm._v(\"一级\")]):(scope.row.cat_level===1)?_c('el-tag',{attrs:{\"type\":\"success\",\"size\":\"mini\"}},[_vm._v(\"二级\")]):_c('el-tag',{attrs:{\"type\":\"warning\",\"size\":\"mini\"}},[_vm._v(\"三级\")])]}},{key:\"opt\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"icon\":\"el-icon-edit\",\"size\":\"mini\"},on:{\"click\":function($event){return _vm.editcat(scope.row)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"icon\":\"el-icon-delete\",\"size\":\"mini\"}},[_vm._v(\"删除\")])]}}])})],1),_c('el-pagination',{attrs:{\"current-page\":_vm.querInfo.pagenum,\"page-sizes\":[3, 5, 15, 20],\"page-size\":_vm.querInfo.pagesize,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.total},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}}),_c('el-dialog',{attrs:{\"title\":\"添加分类\",\"visible\":_vm.addCateDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addCateDialogVisible=$event},\"close\":_vm.addCateDialogClosed}},[_c('el-form',{ref:\"addCateFormRef\",attrs:{\"model\":_vm.addCateForm,\"rules\":_vm.addCateFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分类名称：\",\"prop\":\"cat_name\"}},[_c('el-input',{model:{value:(_vm.addCateForm.cat_name),callback:function ($$v) {_vm.$set(_vm.addCateForm, \"cat_name\", $$v)},expression:\"addCateForm.cat_name\"}})],1),_c('el-form-item',{attrs:{\"label\":\"父级分类：\"}},[_c('el-cascader',{attrs:{\"expand-trigger\":\"hover\",\"options\":_vm.parentCateList,\"props\":_vm.cascaderProps,\"clearable\":\"\",\"change-on-select\":\"\"},on:{\"change\":_vm.parentCateChanged},model:{value:(_vm.selectedKeys),callback:function ($$v) {_vm.selectedKeys=$$v},expression:\"selectedKeys\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addCateDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addCate}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品分类</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片视图 -->\r\n    <el-card>\r\n      <el-row>\r\n        <el-col>\r\n          <el-button type=\"primary\" @click=\"showAddCateDialog\">添加分类</el-button>\r\n        </el-col>\r\n      </el-row>\r\n       <!-- 表格 -->\r\n      <tree-table class=\"treeTable\" :data=\"catelist\" :columns=\"columns\" :selection-type=\"false\" :expand-type=\"false\" show-index index-text=\"#\" border :show-row-hover=\"false\">\r\n            <!-- 是否有效 -->\r\n            <template slot=\"isok\" slot-scope=\"scope\">\r\n            <i class=\"el-icon-success\" v-if=\"scope.row.cat_deleted === false\" style=\"color: lightgreen;\"></i>\r\n            <i class=\"el-icon-error\" v-else style=\"color: red;\"></i>\r\n            </template>\r\n            <!-- 排序 -->\r\n            <!-- eslint-disable-next-line -->\r\n            <template slot=\"order\" slot-scope=\"scope\">\r\n            <el-tag size=\"mini\" v-if=\"scope.row.cat_level===0\">一级</el-tag>\r\n            <el-tag type=\"success\" size=\"mini\" v-else-if=\"scope.row.cat_level===1\">二级</el-tag>\r\n            <el-tag type=\"warning\" size=\"mini\" v-else>三级</el-tag>\r\n            </template>\r\n            <!-- 操作 -->\r\n            <!-- eslint-disable-next-line -->\r\n            <template slot=\"opt\" slot-scope=\"scope\">\r\n            <el-button type=\"primary\" icon=\"el-icon-edit\" size=\"mini\" @click='editcat(scope.row)'>编辑</el-button>\r\n            <el-button type=\"danger\" icon=\"el-icon-delete\" size=\"mini\">删除</el-button>\r\n            </template>\r\n      </tree-table>\r\n    </el-card>\r\n     <!-- 分页区域 -->\r\n     <el-pagination @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\r\n      :current-page=\"querInfo.pagenum\" :page-sizes=\"[3, 5, 15, 20]\"\r\n      :page-size=\"querInfo.pagesize\" layout=\"total, sizes, prev, pager, next, jumper\" :total=\"total\">\r\n    </el-pagination>\r\n    <!-- 添加分类区域 -->\r\n    <el-dialog title=\"添加分类\" :visible.sync=\"addCateDialogVisible\" width=\"50%\" @close=\"addCateDialogClosed\">\r\n        <!-- 添加表单区域 -->\r\n        <el-form :model=\"addCateForm\" :rules=\"addCateFormRules\" ref=\"addCateFormRef\" label-width=\"100px\">\r\n            <el-form-item label=\"分类名称：\" prop=\"cat_name\">\r\n                <el-input v-model=\"addCateForm.cat_name\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"父级分类：\">\r\n                <!-- options 用来指定数据源 -->\r\n                <!-- props 用来指定配置对象 -->\r\n                <el-cascader expand-trigger=\"hover\" :options=\"parentCateList\" :props=\"cascaderProps\" v-model=\"selectedKeys\" @change=\"parentCateChanged\" clearable change-on-select>\r\n                </el-cascader>\r\n            </el-form-item>\r\n        </el-form>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"addCateDialogVisible = false\">取 消</el-button>\r\n            <el-button type=\"primary\" @click=\"addCate\">确 定</el-button>\r\n        </span>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      // 查询条件\r\n      querInfo: {\r\n        type: 3,\r\n        pagenum: 1,\r\n        pagesize: 5,\r\n      },\r\n      // 商品分类的数据列表，默认为空\r\n      catelist: [],\r\n      // 总数据条数\r\n      total:0,\r\n       // 为table指定列的定义\r\n      columns: [\r\n        {\r\n          label: '分类名称',\r\n          prop: 'cat_name'\r\n        },\r\n        {\r\n          label: '是否有效',\r\n          // 表示，将当前列定义为模板列\r\n          type: 'template',\r\n          // 表示当前这一列使用模板名称\r\n          template: 'isok'\r\n        },\r\n        {\r\n          label: '排序',\r\n          // 表示，将当前列定义为模板列\r\n          type: 'template',\r\n          // 表示当前这一列使用模板名称\r\n          template: 'order'\r\n        },\r\n        {\r\n          label: '操作',\r\n          // 表示，将当前列定义为模板列\r\n          type: 'template',\r\n          // 表示当前这一列使用模板名称\r\n          template: 'opt'\r\n        }\r\n      ],\r\n      // 控制添加分类对话框的显示与隐藏\r\n      addCateDialogVisible:false,\r\n       // 添加分类的表单数据对象\r\n      addCateForm: {\r\n        // 将要添加的分类的名称\r\n        cat_name: '',\r\n        // 父级分类的Id\r\n        cat_pid: 0,\r\n        // 分类的等级，默认要添加的是1级分类\r\n        cat_level: 0\r\n      },\r\n      // 添加分类表单的验证规则对象\r\n      addCateFormRules: {\r\n        cat_name: [\r\n          { required: true, message: '请输入分类名称', trigger: 'blur' }\r\n        ]\r\n      },\r\n      // 父级分类的列表\r\n      parentCateList: [],\r\n      // 指定级联选择器的配置对象\r\n      cascaderProps:{\r\n           value: 'cat_id',\r\n           label: 'cat_name',\r\n           children: 'children'\r\n      },\r\n      // 选中的父级分类的Id数组\r\n      selectedKeys:[],\r\n      // 选中的父级分类的Id数组\r\n      selectedKeys: []\r\n    };\r\n  },\r\n  created() {\r\n    this.getCateList();\r\n  },\r\n  methods: {\r\n    async getCateList() {\r\n      const { data: res } = await this.$http.get(\"categories\", {\r\n        params: this.querInfo,\r\n      });\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error(\"获取商品分类失败！\");\r\n      }\r\n      //console.log(res.data);\r\n      // 把数据列表，赋值给 catelist\r\n      this.catelist = res.data.result\r\n      // 为总数据条数赋值\r\n      this.total = res.data.total\r\n    },\r\n    // 监听 pagesize 改变\r\n    handleSizeChange(newSize){\r\n      this.querInfo.pagesize = newSize;\r\n      this.getCateList()\r\n    },\r\n    // 监听 pagenum 改变\r\n    handleCurrentChange(newPage){\r\n      this.querInfo.pagenum = newPage\r\n      this.getCateList()\r\n\r\n    },\r\n    showAddCateDialog(){\r\n        // 先获取父级分类的数据列表\r\n        this.getParentCateList()\r\n        // 再展示出对话框\r\n        this.addCateDialogVisible=true\r\n    },\r\n    // 获取父级分类的数据列表\r\n    async getParentCateList(){\r\n        const { data: res } = await this.$http.get('categories', {\r\n        params: { type: 2 }\r\n      })\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('获取父级分类数据失败！')\r\n      }\r\n    //   console.log(res.data)\r\n      this.parentCateList = res.data\r\n    },\r\n    // 选择项发生变化触发这个函数\r\n    parentCateChanged(){\r\n       console.log(this.selectedKeys)\r\n      // 如果 selectedKeys 数组中的 length 大于0，证明选中的父级分类\r\n      // 反之，就说明没有选中任何父级分类\r\n       if (this.selectedKeys.length > 0) {\r\n        // 父级分类的Id\r\n        this.addCateForm.cat_pid = this.selectedKeys[\r\n          this.selectedKeys.length - 1\r\n        ]\r\n        // 为当前分类的等级赋值\r\n        this.addCateForm.cat_level = this.selectedKeys.length\r\n        return\r\n        } else {\r\n            // 父级分类的Id\r\n            this.addCateForm.cat_pid = 0\r\n            // 为当前分类的等级赋值\r\n            this.addCateForm.cat_level = 0\r\n        }\r\n    },\r\n     // 点击按钮，添加新的分类\r\n    addCate() {\r\n     this.$refs.addCateFormRef.validate( async valid => {\r\n         if (!valid) return\r\n        const { data: res } = await this.$http.post(\r\n          'categories',\r\n          this.addCateForm\r\n        )\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error('添加分类失败！')\r\n        }\r\n        this.$message.success('添加分类成功！')\r\n        this.getCateList()\r\n     }\r\n     )\r\n      //关闭弹窗\r\n      addCateDialogVisible = false;\r\n    },\r\n    // 监听对话框的关闭事件，重置表单数据\r\n    addCateDialogClosed() {\r\n        this.$refs.addCateFormRef.resetFields();\r\n        this.selectedKeys = []\r\n        this.addCateForm.cat_level = 0\r\n        this.addCateForm.cat_pid = 0\r\n    },\r\n    //编辑按钮\r\n    editcat(row){\r\n      console.log(row)\r\n    }\r\n  },\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n  .treeTable{\r\n      margin-top: 15px;\r\n  }\r\n  .el-cascader {\r\n  width: 100%;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Cate.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Cate.vue?vue&type=template&id=018a3739&scoped=true&\"\nimport script from \"./Cate.vue?vue&type=script&lang=js&\"\nexport * from \"./Cate.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Cate.vue?vue&type=style&index=0&id=018a3739&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"018a3739\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('el-breadcrumb',{attrs:{\"separator-class\":\"el-icon-arrow-right\"}},[_c('el-breadcrumb-item',{attrs:{\"to\":{ path: '/home' }}},[_vm._v(\"首页\")]),_c('el-breadcrumb-item',[_vm._v(\"商品管理\")]),_c('el-breadcrumb-item',[_vm._v(\"分类参数\")])],1),_c('el-card',[_c('el-alert',{attrs:{\"title\":\"注意：只允许为第三级分类设置相关参数！\",\"type\":\"warning\",\"show-icon\":\"\"}}),_c('el-row',{staticClass:\"cat_opt\"},[_c('el-col',[_c('span',[_vm._v(\"选择商品分类：\")]),_c('el-cascader',{attrs:{\"expand-trigger\":\"hover\",\"options\":_vm.catelist,\"props\":_vm.cateProps},on:{\"change\":_vm.handleChange},model:{value:(_vm.selectedCateKeys),callback:function ($$v) {_vm.selectedCateKeys=$$v},expression:\"selectedCateKeys\"}})],1)],1),_c('el-tabs',{on:{\"tab-click\":_vm.handleTabClick},model:{value:(_vm.activeName),callback:function ($$v) {_vm.activeName=$$v},expression:\"activeName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"动态参数\",\"name\":\"many\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible=true}}},[_vm._v(\"添加参数\")]),_c('el-table',{attrs:{\"data\":_vm.manyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_vm._l((scope.row.attr_vals),function(item,i){return _c('el-tag',{key:i,attrs:{\"closable\":\"\"},on:{\"close\":function($event){return _vm.handleClose(i, scope.row)}}},[_vm._v(_vm._s(item))])}),(_vm.inputVisible)?_c('el-input',{ref:\"saveTagInput\",staticClass:\"input-new-tag\",attrs:{\"size\":\"small\"},on:{\"blur\":function($event){return _vm.handleInputConfirm(scope.row)}},nativeOn:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }return _vm.handleInputConfirm(scope.row)}},model:{value:(_vm.inputValue),callback:function ($$v) {_vm.inputValue=$$v},expression:\"inputValue\"}}):_c('el-button',{staticClass:\"button-new-tag\",attrs:{\"size\":\"small\"},on:{\"click\":function($event){return _vm.showInput(scope.row)}}},[_vm._v(\"+ New Tag\")])]}}])}),_c('el-table-column',{attrs:{\"label\":\"#\",\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"label\":\"参数名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1),_c('el-tab-pane',{attrs:{\"label\":\"静态属性\",\"name\":\"only\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":_vm.isBtnDisabled},on:{\"click\":function($event){_vm.addDialogVisible=true}}},[_vm._v(\"添加静态属性\")]),_c('el-table',{attrs:{\"data\":_vm.onlyTableData,\"border\":\"\",\"stripe\":\"\"}},[_c('el-table-column',{attrs:{\"type\":\"expand\"}}),_c('el-table-column',{attrs:{\"label\":\"#\",\"type\":\"index\"}}),_c('el-table-column',{attrs:{\"label\":\"属性名称\",\"prop\":\"attr_name\"}}),_c('el-table-column',{attrs:{\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"primary\",\"icon\":\"el-icon-edit\"},on:{\"click\":function($event){return _vm.showEditDialog(scope.row.attr_id)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"size\":\"mini\",\"type\":\"danger\",\"icon\":\"el-icon-delete\"},on:{\"click\":function($event){return _vm.removeParams(scope.row.attr_id)}}},[_vm._v(\"删除\")])]}}])})],1)],1)],1)],1),_c('el-dialog',{attrs:{\"title\":'添加' + _vm.titleText,\"visible\":_vm.addDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.addDialogVisible=$event},\"close\":_vm.addDialogClosed}},[_c('el-form',{ref:\"addFormRef\",attrs:{\"model\":_vm.addForm,\"rules\":_vm.addFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.addForm.attr_name),callback:function ($$v) {_vm.$set(_vm.addForm, \"attr_name\", $$v)},expression:\"addForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.addDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addParams}},[_vm._v(\"确 定\")])],1)],1),_c('el-dialog',{attrs:{\"title\":'添加' + _vm.titleText,\"visible\":_vm.editDialogVisible,\"width\":\"50%\"},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event},\"close\":_vm.editDialogClosed}},[_c('el-form',{ref:\"editFormRef\",attrs:{\"model\":_vm.editForm,\"rules\":_vm.editFormRules,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":_vm.titleText,\"prop\":\"attr_name\"}},[_c('el-input',{model:{value:(_vm.editForm.attr_name),callback:function ($$v) {_vm.$set(_vm.editForm, \"attr_name\", $$v)},expression:\"editForm.attr_name\"}})],1)],1),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.editParams}},[_vm._v(\"确 定\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div>\r\n    <!-- 面包屑导航区域 -->\r\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\r\n      <el-breadcrumb-item :to=\"{ path: '/home' }\">首页</el-breadcrumb-item>\r\n      <el-breadcrumb-item>商品管理</el-breadcrumb-item>\r\n      <el-breadcrumb-item>分类参数</el-breadcrumb-item>\r\n    </el-breadcrumb>\r\n    <!-- 卡片区域 -->\r\n    <el-card>\r\n      <!-- 警告区域 -->\r\n      <el-alert\r\n        title=\"注意：只允许为第三级分类设置相关参数！\"\r\n        type=\"warning\"\r\n        show-icon\r\n      ></el-alert>\r\n      <!-- 选择商品分类区域 -->\r\n      <el-row class=\"cat_opt\">\r\n        <el-col>\r\n          <span>选择商品分类：</span>\r\n          <!-- 选择商品分类的级联选择框 -->\r\n          <el-cascader\r\n            expand-trigger=\"hover\"\r\n            :options=\"catelist\"\r\n            :props=\"cateProps\"\r\n            v-model=\"selectedCateKeys\"\r\n            @change=\"handleChange\"\r\n          >\r\n          </el-cascader>\r\n        </el-col>\r\n      </el-row>\r\n      <!-- tab页签区域 -->\r\n       <el-tabs v-model=\"activeName\" @tab-click=\"handleTabClick\">\r\n        <el-tab-pane label=\"动态参数\" name=\"many\">\r\n        <!-- 添加动态参数面板 -->\r\n        <el-button type=\"primary\" size=\"mini\" :disabled=\"isBtnDisabled\" @click='addDialogVisible=true'>添加参数</el-button>\r\n        <!-- 动态表格区域 -->\r\n        <el-table :data=\"manyTableData\" border stripe>\r\n          <!-- 展开行 -->\r\n          <el-table-column type=\"expand\">\r\n            <!-- eslint-disable-next-line -->\r\n            <template slot-scope=\"scope\">\r\n                <!-- 循环渲染Tag标签 -->\r\n                <el-tag v-for=\"(item, i) in scope.row.attr_vals\" :key=\"i\" closable @close=\"handleClose(i, scope.row)\">{{item}}</el-tag>\r\n                <!-- 输入的文本框 -->\r\n                <el-input class=\"input-new-tag\" v-if=\"inputVisible\" v-model=\"inputValue\"  ref=\"saveTagInput\" size=\"small\" @keyup.enter.native=\"handleInputConfirm(scope.row)\" @blur=\"handleInputConfirm(scope.row)\">\r\n                </el-input>\r\n                <!-- 添加按钮 -->\r\n                <el-button v-else class=\"button-new-tag\" size=\"small\" @click=\"showInput(scope.row)\">+ New Tag</el-button>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column label=\"#\" type=\"index\"></el-table-column>\r\n          <el-table-column label=\"参数名称\" prop=\"attr_name\"></el-table-column>\r\n           <el-table-column label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\" @click=\"showEditDialog(scope.row.attr_id)\">编辑</el-button>\r\n                <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" @click=\"removeParams(scope.row.attr_id)\">删除</el-button>\r\n              </template>\r\n          </el-table-column>\r\n        </el-table>\r\n        </el-tab-pane>\r\n        <el-tab-pane label=\"静态属性\" name=\"only\">\r\n          <!-- 添加静态属性面板 -->\r\n          <el-button type=\"primary\" size=\"mini\" :disabled=\"isBtnDisabled\" @click=\"addDialogVisible=true\">添加静态属性</el-button>\r\n          <!-- 添加静态属性表格 -->\r\n          <el-table :data='onlyTableData' border stripe>\r\n             <!-- 展开行 -->\r\n             <el-table-column type=\"expand\"></el-table-column>\r\n             <el-table-column label=\"#\" type='index'></el-table-column>\r\n             <el-table-column label=\"属性名称\" prop=\"attr_name\"></el-table-column>\r\n              <el-table-column label=\"操作\">\r\n                <template slot-scope=\"scope\">\r\n                  <el-button size=\"mini\" type=\"primary\" icon=\"el-icon-edit\" @click=\"showEditDialog(scope.row.attr_id)\">编辑</el-button>\r\n                  <el-button size=\"mini\" type=\"danger\" icon=\"el-icon-delete\" @click=\"removeParams(scope.row.attr_id)\">删除</el-button>\r\n                </template>\r\n              </el-table-column>\r\n          </el-table>\r\n        </el-tab-pane>\r\n    </el-tabs>\r\n    </el-card>\r\n    <!-- 添加参数对话框 -->\r\n    <el-dialog :title=\"'添加' + titleText\" :visible.sync=\"addDialogVisible\" width=\"50%\" @close=\"addDialogClosed\">\r\n      <!-- 添加参数的对话框 -->\r\n      <el-form :model=\"addForm\" :rules=\"addFormRules\" ref=\"addFormRef\" label-width=\"100px\">\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"addForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"addDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"addParams\">确 定</el-button>\r\n      </span>\r\n    </el-dialog>\r\n   <!-- 添加静态属性对话框 -->\r\n   <el-dialog :title=\"'添加' + titleText\" :visible.sync=\"editDialogVisible\" width=\"50%\" @close=\"editDialogClosed\">\r\n      <!-- 添加参数的对话框 -->\r\n      <el-form :model=\"editForm\" :rules=\"editFormRules\" ref=\"editFormRef\" label-width=\"100px\">\r\n        <el-form-item :label=\"titleText\" prop=\"attr_name\">\r\n          <el-input v-model=\"editForm.attr_name\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n      <span slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"editParams\">确 定</el-button>\r\n      </span>\r\n   </el-dialog>\r\n  </div>\r\n</template>\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      //商品分类列表\r\n      catelist: [],\r\n      // 级联选择框的配置对象\r\n      cateProps: {\r\n        value: \"cat_id\",\r\n        label: \"cat_name\",\r\n        children: \"children\",\r\n      },\r\n      // 级联选择框双向绑定到的数组\r\n      selectedCateKeys: [],\r\n      // 被激活的页签的名称\r\n      activeName:'many',\r\n      // 动态参数的数据\r\n      manyTableData: [],\r\n      // 静态属性的数据\r\n      onlyTableData: [],\r\n      //控制添加参数对话框的显示与隐藏\r\n      addDialogVisible:false,\r\n      //控制添加静态属性对话框\r\n      editDialogVisible:false,\r\n      // 添加参数的表单数据对象\r\n      addForm:{\r\n        attr_name:''\r\n      },\r\n      // 添加表单的验证规则对象\r\n      addFormRules:{\r\n        attr_name:[{ required: true, message: '请输入参数名称', trigger: 'blur' }]\r\n      },\r\n      editForm:{},\r\n      editFormRules:{\r\n        attr_name:[{ required: true, message: '请输入参数名称', trigger: 'blur' }]\r\n      },\r\n      inputVisible:false,\r\n      inputValue:''\r\n    };\r\n  },\r\n  created() {\r\n      this.getCateList();\r\n  },\r\n  methods: {\r\n      // 获取所有的商品分类列表\r\n      async getCateList() {\r\n          const { data: res } = await this.$http.get('categories')\r\n            if (res.meta.status !== 200) {\r\n                return this.$message.error('获取商品分类失败！')\r\n            }\r\n            this.catelist = res.data;\r\n      },\r\n      // 获取参数的列表数据\r\n      async getParamsData() {\r\n          // 证明选中的不是三级分类\r\n        if (this.selectedCateKeys.length !== 3) {\r\n          this.selectedCateKeys = [];\r\n          this.manyTableData = [];\r\n          this.onlyTableData = [];\r\n          return\r\n        }\r\n        // 证明选中的是三级分类\r\n        console.log(this.selectedCateKeys)\r\n        // 根据所选分类的Id，和当前所处的面板，获取对应的参数\r\n        const { data: res } = await this.$http.get(\r\n          `categories/${this.cateId}/attributes`,\r\n          {\r\n            params: { sel: this.activeName }\r\n          }\r\n        )\r\n        if (res.meta.status !== 200) {\r\n          return this.$message.error('获取参数列表失败！')\r\n        }\r\n        console.log(res.data)\r\n        if (this.activeName === 'many') {\r\n          this.manyTableData = res.data\r\n        } else {\r\n          this.onlyTableData = res.data\r\n        }\r\n        res.data.forEach(item => {\r\n        item.attr_vals = item.attr_vals ? item.attr_vals.split(' ') : []\r\n        // 控制文本框的显示与隐藏\r\n        item.inputVisible = false\r\n        // 文本框中输入的值\r\n        item.inputValue = ''\r\n      })\r\n        console.log(res.data)\r\n      },\r\n      // 级联选择框选中项变化，会触发这个函数\r\n      handleChange(){\r\n          this.getParamsData();\r\n      },\r\n      // tab 页签点击事件的处理函数\r\n      handleTabClick(){\r\n        console.log(this.activeName)\r\n        this.getParamsData()\r\n      },\r\n      //添加参数\r\n      addParams(){\r\n        this.$refs.addFormRef.validate(async valid => {\r\n        if (!valid) return\r\n        const { data: res } = await this.$http.post(\r\n          `categories/${this.cateId}/attributes`,\r\n          {\r\n            attr_name: this.addForm.attr_name,\r\n            attr_sel: this.activeName\r\n          }\r\n        )\r\n        if (res.meta.status !== 201) {\r\n          return this.$message.error('添加参数失败！')\r\n        }\r\n        this.$message.success('添加参数成功！')\r\n        this.addDialogVisible = false\r\n        this.getParamsData()\r\n        })\r\n      },\r\n      //添加静态属性\r\n      editParams(){\r\n         this.$refs.editFormRef.validate( async valid=>{\r\n           if(!valid) return \r\n           const { data: res } = await this.$http.put(\r\n          `categories/${this.cateId}/attributes/${this.editForm.attr_id}`,\r\n          { attr_name: this.editForm.attr_name, attr_sel: this.activeName }\r\n          )\r\n          if (res.meta.status !== 200) {\r\n            return this.$message.error('修改参数失败！')\r\n          }\r\n          this.$message.success('修改参数成功！')\r\n          this.getParamsData()\r\n          this.editDialogVisible = false\r\n         })\r\n      },\r\n      // 根据Id修改对应的参数项\r\n      async showEditDialog(attr_id){\r\n          // 查询当前参数的信息\r\n          const { data: res } = await this.$http.get(\r\n            `categories/${this.cateId}/attributes/${attr_id}`,\r\n            {\r\n              params: { attr_sel: this.activeName }\r\n            }\r\n          )\r\n\r\n          if (res.meta.status !== 200) {\r\n            return this.$message.error('获取参数信息失败！')\r\n          }\r\n\r\n          this.editForm = res.data\r\n          this.editDialogVisible = true\r\n\r\n      },\r\n      // 根据Id删除对应的参数项\r\n      async removeParams(attr_id){\r\n        const confirmResult = await this.$confirm(\r\n        '此操作将永久删除该参数, 是否继续?',\r\n        '提示',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).catch(err => err)\r\n      // 用户取消了删除的操作\r\n      if (confirmResult !== 'confirm') {\r\n        return this.$message.info('已取消删除！')\r\n      }\r\n      // 删除的业务逻辑\r\n      const { data: res } = await this.$http.delete(\r\n        `categories/${this.cateId}/attributes/${attr_id}`\r\n      )\r\n\r\n      if (res.meta.status !== 200) {\r\n        return this.$message.error('删除参数失败！')\r\n      }\r\n\r\n      this.$message.success('删除参数成功！')\r\n      this.getParamsData()\r\n      },\r\n      //关闭添加参数对话框\r\n      addDialogClosed(){\r\n         this.$refs.addFormRef.resetFields();\r\n      },\r\n      //关闭添加静态属性对话框\r\n      editDialogClosed(){\r\n         this.$refs.editFormRef.resetFields()\r\n      },\r\n      // 删除对应的参数可选项\r\n      handleClose(i,row){\r\n         row.attr_vals.splice(i, 1);\r\n         this.saveAttrVals(row);\r\n      },\r\n      // 将对 attr_vals 的操作，保存到数据库\r\n      async saveAttrVals(row){\r\n          // 需要发起请求，保存这次操作\r\n          const { data: res } = await this.$http.put(\r\n            `categories/${this.cateId}/attributes/${row.attr_id}`,\r\n            {\r\n              attr_name: row.attr_name,\r\n              attr_sel: row.attr_sel,\r\n              attr_vals: row.attr_vals.join(' ')\r\n            }\r\n          )\r\n          if (res.meta.status !== 200) {\r\n          return this.$message.error('修改参数项失败！')\r\n          }\r\n          this.$message.success('修改参数项成功！')\r\n      },\r\n      // 文本框失去焦点，或摁下了 Enter 都会触发\r\n      async handleInputConfirm(row) {\r\n        if (this.inputValue.trim().length === 0) {\r\n          this.inputValue = ''\r\n          this.inputVisible = false\r\n          return\r\n        }\r\n        // 如果没有return，则证明输入的内容，需要做后续处理\r\n        row.attr_vals.push(this.inputValue.trim())\r\n        this.inputValue = ''\r\n        this.inputVisible = false\r\n        // 需要发起请求，保存这次操作\r\n        this.saveAttrVals(row)\r\n      },\r\n      // 点击按钮，展示文本输入框\r\n      showInput(row) {\r\n        // row.inputVisible = true\r\n        this.inputVisible=true\r\n        // 让文本框自动获得焦点\r\n        // $nextTick 方法的作用，就是当页面上元素被重新渲染之后，才会指定回调函数中的代码\r\n        this.$nextTick(_ => {\r\n          this.$refs.saveTagInput.$refs.input.focus()\r\n        })\r\n      },\r\n\r\n  },\r\n  computed: {\r\n    // 如果按钮需要被禁用，则返回true，否则返回false\r\n    isBtnDisabled(){\r\n      if (this.selectedCateKeys.length !== 3) {\r\n        return true\r\n      }\r\n      return false\r\n    },\r\n    // 当前选中的三级分类的Id\r\n    cateId() {\r\n       if (this.selectedCateKeys.length === 3) {\r\n        return this.selectedCateKeys[2]\r\n      }\r\n      return null\r\n    },\r\n    // 动态计算标题的文本\r\n    titleText() {\r\n      if (this.activeName === 'many') {\r\n        return '动态参数'\r\n      }\r\n      return '静态属性'\r\n    }\r\n\r\n  }\r\n};\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.cat_opt {\r\n  margin: 15px 0;\r\n}\r\n.el-tag {\r\n  margin: 10px;\r\n}\r\n.input-new-tag {\r\n  width: 120px;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./Params.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Params.vue?vue&type=template&id=06071f12&scoped=true&\"\nimport script from \"./Params.vue?vue&type=script&lang=js&\"\nexport * from \"./Params.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Params.vue?vue&type=style&index=0&id=06071f12&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"06071f12\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","path","_v","on","showAddCateDialog","staticClass","catelist","columns","scopedSlots","_u","key","fn","scope","row","cat_deleted","staticStyle","cat_level","$event","editcat","querInfo","pagenum","pagesize","total","handleSizeChange","handleCurrentChange","addCateDialogVisible","addCateDialogClosed","ref","addCateForm","addCateFormRules","model","value","callback","$$v","$set","expression","parentCateList","cascaderProps","parentCateChanged","selectedKeys","slot","addCate","staticRenderFns","data","type","label","prop","template","cat_name","cat_pid","required","message","trigger","children","created","methods","params","component","cateProps","handleChange","selectedCateKeys","handleTabClick","activeName","isBtnDisabled","addDialogVisible","manyTableData","_l","item","i","handleClose","_s","handleInputConfirm","nativeOn","indexOf","_k","keyCode","inputValue","showInput","showEditDialog","attr_id","removeParams","onlyTableData","titleText","addDialogClosed","addForm","addFormRules","addParams","editDialogVisible","editDialogClosed","editForm","editFormRules","editParams","attr_name","inputVisible","sel","res","attr_sel","confirmButtonText","cancelButtonText","catch","err","attr_vals","computed","cateId"],"sourceRoot":""}